@model IEnumerable<MCSDD26.Models.Products>
@{

    Layout = "~/Views/Shared/_Layout.cshtml";
    int c = 0;

}

@helper IsActive(int c)
{


    if (c == 0)
    {
        @:active
    }

}



<div id="adForProducts" class="carousel slide" data-ride="carousel">
    <ol class="carousel-indicators">
        <li data-target="#adForProducts" data-slide-to="0"></li>
        @for (int i = 1; i < Model.Count(); i++)
        {

            <li data-target="#adForProducts" data-slide-to="@i"></li>

        }
    </ol>
    <div class="carousel-inner">
        @foreach (var item in Model)
        {
            <div class="carousel-item @IsActive(c)">

                <img src="@Url.Action("GetImage", "Products", new { id = item.ProductID })" class="d-block w-50" />
                <div class="carousel-caption d-none d-md-block">
                    <h5 class="text-truncate bg-secondary ">@item.ProductName</h5>   <!-- icon -->
                    <p class="text-truncate bg-secondary">@item.Description</p>     <!-- icon -->
                </div>
            </div>
            c++;


        }

    </div>
    <button class="carousel-control-prev" type="button" data-target="#adForProducts" data-slide="prev">
        <span class="carousel-control-prev-icon" aria-hidden="true"></span>
        <span class="sr-only">Previous</span>
    </button>
    <button class="carousel-control-next" type="button" data-target="#adForProducts" data-slide="next">
        <span class="carousel-control-next-icon" aria-hidden="true"></span>
        <span class="sr-only">Next</span>
    </button>
</div>
<div class="row mt-2">
    @foreach (var item in Model)
    {

        <div class="col-md-3  p-1">
            <div class="card border-dark">
                <a href="@Url.Action("Display", new { id=item.ProductID})">
                    <img src="@Url.Action("GetImage","Products",new { id=item.ProductID})" class="img-fluid pt-2" />
                    <div class="card-body">
                        <input type="hidden" value="@item.ProductID" class="PID" />
                        <h5 class="text-dark"><strong class="PName">@item.ProductName</strong></h5>
                        <h3 class="text-danger text-right Price" p="@item.UnitPrice">@Html.DisplayFor(modelItem => item.UnitPrice)</h3>
                    </div>
                </a>

                <div class="p-2">
                    <p><button class="btn btn-outline-danger btn-block addCart">加入購物車 <i class="bi bi-cart2"></i></button></p>
                </div>
            </div>

        </div>
          @*  <div class="card col-lg-3 ">
                <a  href="@Url.Action("Display", new { id=item.ProductID})">

                    <img src="@Url.Action("GetImage","Products",new { id=item.ProductID})" class="img-fluid pt-2" />
                    <div class="card-body">
                        <h5 class="text-dark"><strong>@item.ProductName</strong></h5>

                    </div>
                </a>
                <div class="card-footer">
                    <h3 class="text-danger text-right">@Html.DisplayFor(modelItem => item.UnitPrice)</h3>
                    <p><span class="btn btn-outline-danger btn-block mt-3 ">加入購物車 &raquo;</span></p>
                </div>
            </div> 
            *@
    }
</div>
    <span id="MyCart">
        <a href="@Url.Action("MyCart")"> <i class="bi bi-cart4 text-dark"></i><span class="badge badge-pill badge-danger text-white " style="font-size: 1rem"></span></a>

    </span>
@section css{
    <style>



        a:hover {
            text-decoration: none;
        }

        #MyCart {
            position: fixed;
            right: 30px;
            bottom: 70px;
            font-size: 3rem;
            
        }

            #MyCart > span {
                font-size: 1rem;
               
            }
    </style>

}

@section scripts{
    <script>
        var cart = [];

        if (localStorage.getItem('cart')) {

            cart = JSON.parse(localStorage.getItem('cart'));

        }


        $('#MyCart .badge').text(cart.length);
        $('.addCart').click(function () {
            let product = $(this).closest('.card');
            let newPID = product.find('.PID').val();


            let foundItem = cart.find(item => item.PID == newPID);

            if (foundItem === undefined) {

                setCart(product);

            }

            else {
                foundItem.Amount += 1;
                alert("商品數量已更新");
            }

            /*
            console.log(product.find('.PName').text());
            console.log(product.find('.PID').val());
            console.log(product.find('.Price').attr('title'));
            */


            /*

            if (cart.length > 0) {
                for (let i in cart) {
                    if (cart[i]["PID"] == newPID) {
                        //代表此商品已經在購物車中,因此將數量加1
                        cart[i]["Amount"] += 1;
                        alert("商品數量已更新");
                        break;
                    }
                    setCart(product);
                }
            }
            else {
                setCart(product);
            }
 */
            console.log(cart);

            localStorage.setItem("cart", JSON.stringify(cart));

        })


        function setCart(product) {


            let newItem = {
                PID: product.find('.PID').val(),
                PName: product.find('.PName').text(),
                Price: product.find('.Price').attr('p'),
                Amount: 1
            }
            cart.push(newItem);
            $('#MyCart .badge').text(cart.length);
            alert("商品已加入購物車");
        }
    </script>

}


